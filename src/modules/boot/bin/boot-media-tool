#!/usr/bin/env python
# $Id$
#
# Copyright 2007 Platform Computing Corporation.
#
# Licensed under GPL version 2; See LICENSE for details.
#

import sys
import os
from kusu.app import KusuApp
from kusu.boot.distro import GeneralInstallSrc
from kusu.boot.distro import CopyError
from kusu.boot.image import *


class BootMediaTool:
    """ The management class for boot-media-tool operations. """
        
    def initSrc(self,srcPath):
        self.installsrc = GeneralInstallSrc(srcPath)
        
    def checkValidSrcPath(self):
        """ Verify if the srcPath is valid. """
        return self.installsrc.verifySrcPath()
        
    def getDistro(self):
        """ Returns the OS type. """
        return self.installsrc.ostype
        
    def queryKernelPath(self):
        """ Query the srcPath and returns the path of the kernel. """
        return self.installsrc.getKernelPath()
        
    def queryInitrdPath(self):
        """ Query the srcPath and returns the path of the initrd. """
        return self.installsrc.getInitrdPath()
        
    def copyKernel(self,dest):
        """ Extract the kernel from the srcPath to the dest. """
        try:
            self.installsrc.copyKernel(dest)
            return True
        except CopyError:
            return False
            
    def copyInitrd(self,dest):
        """ Extract the initrd from the srcPath to the dest. """
        try:
            self.installsrc.copyInitrd(dest)
            return True
        except CopyError:
            return False
            
    def packRootImg(self, dirname, rootimgpath, initscript=None):
        """ Converts the rootfs directory into a initramfs image. """
        try:
            packInitramFS(dirname, rootimgpath, initscript)
            return True
        except FilePathError:
            return False
            
    def unpackRootImg(self, rootimgpath, dirname):
        """ Unpack a root image into a rootfs directory. """
        try:
            unpack(rootimgpath, dirname)
            return True
        except (FilePathError,NotPriviledgedUser):
            return False
            
        
class BootMediaApp(KusuApp):
    """ Application class for boot-media-tool. """
    
    def __init__(self, bminst):
        """ App-specific initialization. """
        KusuApp.__init__(self)
        self.bminst = bminst
        
    def parseargs(self):
        """ App-specific arguments goes here. """
        self.options, self.args = self.parser.parse_args()
        
    def run(self):
        """ Main launcher. """
        self.parseargs()
        
if __name__ == '__main__':
    bminst = BootMediaTool()
    app = BootMediaApp(bminst)
    app.run()

