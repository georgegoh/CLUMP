#!/usr/bin/env python
# $Id: kusu_installer.py 247 2007-04-10 09:34:34Z ggoh $
#
# Kusu Text Installer Framework.
#
# Copyright 2007 Platform Computing Corporation.
#
# Licensed under GPL version 2; See LICENSE file for details.
#
"""This module is the backbone of the Text Installer Framework. It performs the 
   presentation, navigation,and data validation tasks."""
__version__ = "$Revision: 247 $"

import sys
import logging
import snack
import gettext
import re
import os
from kusu.boot.tool import getPartitionMap, makeDev
from kusu.core.app import KusuApp
from kusu.ui.text.navigator import Navigator
from kusu.installer.kusufactory import ScreenFactoryImpl
from kusu.util.log import Logger

class KusuInstaller(Navigator, KusuApp):
    """Framework for displaying installation steps and screens.

    The KusuInstaller class takes a screenFactory object, and displays the
    screens in the order described in the screenFactory.

    """
    def __init__(self, screenFactory, screenTitle, showTrail=True):
        KusuApp.__init__(self)
        Navigator.__init__(self, screenFactory, screenTitle, showTrail)


if __name__ == '__main__':
    # Sets up kusu logging
    kl = Logger()

    # kusu_dist = os.environ.get('KUSU_DIST', None)
    # if kusu_dist in ['rhel', 'fedora']:
    if os.access("/dev/tty3", os.W_OK):
        kl.addFileHandler('/dev/tty3')

    # get the map of the available partitions
    devmap = getPartitionMap()
    devices = devmap.keys()
    
    # set up a pattern of the devices we are interested in
    pat = re.compile('[hs]d\d*')
    for dev in devices:
        m = pat.match(dev)
        if m:
            makeDev('b',devmap[dev]['major'],devmap[dev]['minor'],dev)

    # create kusu installer instance
    ki = KusuInstaller(screenFactory=ScreenFactoryImpl,
                       screenTitle='Kusu Installer',
                       showTrail=True)
    ki.run()
