#!/usr/bin/env python
#
# Copyright (C) 2010 Platform Computing Inc
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 	
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
#
# $Id: umount 3559 2010-02-26 07:27:13Z ggoh $

# This module is meant to be a standalone 'umount' command replacement.
#
# Run this file to see usage instructions.
#

import sys
from path import path

# convenience function for stderr.
error = sys.stderr.write

# exit with error if anaconda not found.
ANACONDA_PATH=path('/usr/lib/anaconda')
if not ANACONDA_PATH.exists():
    error('ERROR: anaconda libraries not present in %s\n' % ANACONDA_PATH)
    sys.exit(1)

sys.path.append(ANACONDA_PATH)
import isys

def parse_args(args):
    """
    Parse the arguments given to the mount program. The arguments should be:
        <mountpoint>
    """
    if len(args) < 2:
        error('Insufficient args supplied.\n')
        error('Usage: ' + args[0] + ' <mountpoint>\n')
        sys.exit(1)

    mountpoint = args[1]

    # validate paths
    if not path(mountpoint).exists():
        error('ERROR: mountpoint path given does not exist.\n')
        sys.exit(1)

    return mountpoint


if __name__ == "__main__":
    mountpoint = parse_args(sys.argv)
    try:
        isys.umount(mountpoint)
    except Exception, e:
        error(str(e))
        sys.exit(1)
