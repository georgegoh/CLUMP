#!/usr/bin/env python
# $Id: kusurc.py 1436 2007-06-19 11:56:44Z ltsai $
#
# Copyright 2007 Platform Computing Inc.
#
# Licensed under GPL version 2; See LICENSE file for details.
#

from kusu.core import database as db
from path import path
import os
import re
import sys

class App:

    def __init__(self):
        self.os_name = os.environ.get('KUSU_DIST', None)
        self.os_version = os.environ.get('KUSU_DISTVER', None)
        self.os_arch = os.environ.get('KUSU_DIST_ARCH', None)
        
    def run(self):
        self.migrateDB()
        self.makeRepos()
       
    def migrateDB(self):
        """Set up MySQL connection and SQLite collection, then migrate."""
             
        if path('/root/kusudb').exists():
            self.sqliteDB = db.DB('sqlite', '/root/kusu.db')
            self.db = db.DB('mysql', 'kusudb', 'root', entity_name='alt')

            self.sqliteDB.copyTo(self.db)
            os.unlink('/root/kusu.db')

        # FIXME: Work around for SA syntax problem
        import sqlalchemy as sa

        for key in sa.orm.mapper_registry.keys():
            sa.orm.mapper_registry.pop(key)
        self.db = db.DB('mysql', 'kusudb', 'root')

    def makeRepos(self):
        """Makes the repoistory for compute and installer nodes."""

        from kusu.repoman.repofactory import RepoFactory

        rfactory = RepoFactory(self.db)
        longname = '%s-%s-%s' % (self.os_name, self.os_version, self.os_arch)

        ngname = 'installer' + '-' + longname
        rfactory.make(ngname, 'Repo for ' + ngname)
    
        ngname = 'compute' + '-' + longname
        rfactory.make(ngname, 'Repo for ' + ngname)
        
if __name__ == "__main__":
    app = App()
    app.run()

    # delete myself once I'm finished
    os.remove(sys.argv[0])
