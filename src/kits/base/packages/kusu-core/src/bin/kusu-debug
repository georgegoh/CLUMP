#!/bin/sh
#
# $Id: kusu-debug 4520 2009-04-09 12:26:50Z ltsai $

BASE_DIR=/tmp
MODULES=etc/modprobe.conf

usage() {
    echo "Usage:"
    echo "$0 [OPTIONS]"
    echo "Debug utility that packages log files and other information"
    echo
    echo "  OPTIONS:"
    echo "    --help                Display usage and exit"
    echo "    --dir                 Destination directory for the tarball ($BASE_DIR)"
    exit $1
}

# check source file before copy
check_cp_file()
{
    # check parameters
    if [ ! $# -eq 2 ]; then
        echo "Parameters Error!";
        return 1;
    fi

    # check source
    /bin/ls $1 > /dev/null 2>&1
    if [ ! $? = 0 ]; then
        return 1;
    fi

    # exec
    /bin/cp -a $1 $2
    return 0;
}

# check source dir before copy
check_cp_dir()
{
    # check parameters
    if [ ! $# -eq 2 ]; then
        echo "Parameters Error!";
        return 1;
    fi

    # check source
    if [ ! -d $1 ]; then
        return 1;
    fi

    # exec
    /bin/cp -a $1 $2
    return 0;
}

while [ $# -ne 0 ]; do
    arg="$1"
    case "$arg" in
        --help)
            usage 0
            ;;
        --dir)
            shift
            BASE_DIR=$1
            ;;
        --*)
            echo "Unknown option $arg (use --help)"
            exit 1
            ;;
        *)
            echo "Too many arguments (use --help)"
            exit 1
            ;;
    esac
    shift
done

if [ "`id -u`" -ne "0" ]; then
    echo 'Must run as root user'
    exit 1
fi

if [ ! -d "$BASE_DIR" ]; then
    mkdir -p "$BASE_DIR"
    [ $? != 0 ] && echo "Unable to create directory $BASE_DIR" && exit 1
fi

# Make sure BASE_DIR is not relative
BASE_DIR=`cd $BASE_DIR && pwd`

DIR=$BASE_DIR/kusu-debug-$$/kusu-debug
TFTPDIR=$BASE_DIR/kusu-debug-$$/kusu-debug-tftpboot                                              
DATESTRING=`date +'%Y%m%d%H%M%S%Z'`                                                              
LOGANDCONFTARBALL=$BASE_DIR/kusu-debug-$DATESTRING.tar.gz                                        
TFTPTARBALL=$BASE_DIR/kusu-debug-tftpboot-$DATESTRING.tar.gz 

# ROLE
if [ -f /opt/kusu/bin/kusu-genconfig ]; then
    ROLE=MASTER
else
    ROLE=NODE
fi

/bin/mkdir -p $DIR $TFTPDIR
if [ $? != 0 ] ; then
    echo "Unable to create directory $DIR or $TFTPDIR"
    exit
fi

chmod 700 $DIR $TFTPDIR
cd $DIR

echo 
echo "Collecting and packaging relevant diagnostic information."
echo "Warning: this may take some time..."

mkdir -p $DIR/kusu
mkdir -p $DIR/rpms
mkdir -p $DIR/root
mkdir -p $DIR/tmp
mkdir -p $DIR/genconfig
mkdir -p $DIR/var/log/kusu
mkdir -p $DIR/dbdump
mkdir -p $DIR/etc/profile.d
mkdir -p $DIR/etc/skel
mkdir -p $DIR/opt/kusu

echo "    * copying services runlevel configuration"
/sbin/chkconfig --list > $DIR/chkconfig

if [ -d /etc/samba ]; then
    echo "    * copying Samba configuration"
    mkdir -p $DIR/etc/samba
    check_cp_dir /etc/samba $DIR/etc/
fi

if [ -f /etc/netgroup ]; then
    check_cp_file /etc/netgroup $DIR/etc/netgroup
fi

if [ -f /etc/hosts.equiv ]; then
    check_cp_file /etc/hosts.equiv $DIR/etc/hosts.equiv
fi

echo "    * copying profiles directory"
check_cp_dir /etc/profile.d $DIR/etc/

echo "    * copying skeleton directory"
check_cp_dir /etc/skel $DIR/etc/

echo "    * copying udev directory"
check_cp_dir /etc/udev $DIR/etc/

echo "    * copying /opt/kusu/etc directory"
check_cp_dir /opt/kusu/etc $DIR/opt/kusu/

if [ -d /opt/kusu/cfm ]; then
    echo "    * copying /opt/kusu/cfm directory"
    check_cp_dir /opt/kusu/cfm $DIR/opt/kusu/
fi

echo "    * copying startup scripts (rc.d files)"
check_cp_dir /etc/rc.d $DIR/etc/

echo "    * copying configuration information"
if [ -f /etc/redhat-release ]; then
    mkdir -p $DIR/etc/httpd/conf
    check_cp_file  "etc/httpd/conf/*.conf" $DIR/etc/httpd/conf
else
    mkdir -p $DIR/etc/apache2/conf.d
    check_cp_file "/etc/apache2/conf.d/*.conf" $DIR/etc/apache2/conf.d/
fi

if [ -f /etc/profile.nii ]; then
    check_cp_file "/etc/profile.nii" $DIR/etc/
fi

check_cp_file "/etc/auto.*" $DIR/etc/
check_cp_file /etc/exports $DIR/etc/
check_cp_file /etc/dhcpd.conf $DIR/etc/dhcpd.conf
check_cp_file /etc/resolv.conf $DIR/etc/resolv.conf
check_cp_file /etc/named.conf $DIR/etc/named.conf
check_cp_file /etc/hosts $DIR/etc/hosts
check_cp_dir /tftpboot $TFTPDIR/

if [ -f /etc/redhat-release ]; then
    mkdir -p $DIR/etc/sysconfig/network-scripts
    check_cp_file "/etc/sysconfig/network-scripts/ifcfg-eth?" $DIR/etc/sysconfig/network-scripts/
else
    mkdir -p $DIR/etc/sysconfig/network/
    check_cp_file "/etc/sysconfig/network/ifcfg*" $DIR/etc/sysconfig/network/
fi

check_cp_dir /etc/sysconfig/network $DIR/etc/sysconfig/network


if [ -f /etc/redhat-release ]; then
    check_cp_file /etc/sysconfig/iptables $DIR/etc/sysconfig/iptables
else
    check_cp_file /etc/sysconfig//SuSEfirewall2 $DIR/etc/sysconfig/SuSEfirewall2
fi

check_cp_file /$MODULES $DIR/$MODULES
check_cp_file /etc/fstab $DIR/etc/fstab
check_cp_file /etc/ld.so.conf $DIR/etc/ld.so.conf


if [ -f /etc/redhat-release ]; then
    mkdir -p $DIR/var/named
    check_cp_file "/var/named/*" $DIR/var/named/
else
    mkdir -p $DIR/var/lib/named
    check_cp_file "/var/lib/named/*.zone" $DIR/var/lib/named/
    check_cp_file "/var/lib/named/*.rev" $DIR/var/lib/named/
fi

if [ -d /etc/ld.so.conf.d ]; then
    check_cp_dir /etc/ld.so.conf.d $DIR/etc/ld.so.conf.d
fi

echo "    * copying user/group information"
python -c "import pwd; import pprint; pprint.pprint(pwd.getpwall())" > $DIR/etc/passwd
check_cp_file /etc/group $DIR/etc/group

echo "    * copying logs"

if [ -f /root/anaconda-ks.cfg ]; then
    check_cp_file /root/anaconda-ks.cfg $DIR/root
fi

check_cp_file /root/kusu.log $DIR/root

if [ -f /etc/redhat-release ]; then
    check_cp_file /root/kusu-ks.cfg $DIR/root
else
    check_cp_file /root/kusu-autoinst.xml $DIR/root
fi

if [ -f /root/install.log ]; then
    check_cp_file /root/install.log $DIR/root
fi

check_cp_file "/var/log/messages*" $DIR/var/log/

if [ -f /var/log/dmesg ]; then
    check_cp_file "/var/log/dmesg*" $DIR/var/log/
fi

if [ -f /var/log/kusu/cfmclient.log ]; then
    check_cp_file "/var/log/kusu/cfmclient.log" $DIR/var/log/
fi

if [ -f /etc/redhat-release ]; then
    mkdir -p $DIR/var/log/httpd
    check_cp_file "/var/log/httpd/*" $DIR/var/log/httpd/
else
    mkdir -p $DIR/var/log/apache2
    check_cp_file "/var/log/apache2/*" $DIR/var/log/apache2
fi

check_cp_file "/var/log/kusu/*" $DIR/var/log/kusu/

echo "    * querying RPM database"
rpm -qa | sort > $DIR/rpms/rpm-manifest

if [ "$ROLE" = "MASTER" ]; then
    echo "    * querying kusu-genconfig"
    kusu-genconfig bashrc > $DIR/genconfig/bashrc
    kusu-genconfig apache_conf > $DIR/genconfig/apache_conf
    kusu-genconfig hostspdsh > $DIR/genconfig/hostspdsh
    kusu-genconfig nodegroups > $DIR/genconfig/nodegroups
    kusu-genconfig hostsequiv > $DIR/genconfig/hostsequiv
    kusu-genconfig debug > $DIR/genconfig/debug
    kusu-genconfig named > $DIR/genconfig/named
    kusu-genconfig ssh > $DIR/genconfig/ssh
    kusu-genconfig dhcpd > $DIR/genconfig/dhcpd
    kusu-genconfig nodes > $DIR/genconfig/nodes
    kusu-genconfig zone > $DIR/genconfig/zone
    #kusu-genconfig reverse <network> > $DIR/genconfig/reverse
    kusu-genconfig hosts > $DIR/genconfig/hosts
fi

echo "    * get iptables information"
if [ -f /etc/redhat-release ]; then
    service iptables status > $DIR/iptables
else
    service SuSEfirewall2_init status > $DIR/SuSEfirewall2_init
    service SuSEfirewall2_setup > $DIR/SuSEfirewall2_setup
fi

echo "    * get route information"
route -n > $DIR/route

echo "    * get env information"
env > $DIR/env

echo "    * get dmesg information"
dmesg > $DIR/dmesg

echo "    * get memory information"
free -m > $DIR/free

echo "    * get exportfs information"
exportfs -v > $DIR/exportfs

echo "    * get last information"
last > $DIR/last

echo "    * get lspci information"
lspci -vvv > $DIR/lspci

echo "    * get dmidecode information"
dmidecode > $DIR/dmidecode

echo "    * get biosdecode information"
biosdecode > $DIR/biosdecode

echo "    * get name_eths information"
(cd /opt/kusu/libexec/name_eths; ./hw_eth_order.pl > $DIR/hw_eth_order.pl.txt)
(cd /opt/kusu/libexec/name_eths; ./dump_pirq > $DIR/dump_pirq)

echo "    * get mount information"
mount > $DIR/mount

echo "    * get ifconfig information"
ifconfig -a > $DIR/ifconfig

echo "    * get ldconfig information"
ldconfig -p > $DIR/ldconfig

echo "    * get diskspace available"
df -h > $DIR/diskinfo

echo "    * get uptime/load average"
uptime > $DIR/uptime

echo "    * get uname"
uname -a > $DIR/uname

echo "    * get hostname"
hostname > $DIR/hostname

echo "    * get Kusu release"
check_cp_file /etc/kusu-release $DIR/kusu-release

if [ -f /etc/redhat-release ]; then
    echo "    * get redhat-release"
    check_cp_file /etc/redhat-release $DIR/redhat-release
else
    echo "    * get SuSE-release"
    check_cp_file /etc/SuSE-release $DIR/etc/SuSE-release
fi

if [ "$ROLE" = "MASTER" ]; then
    echo "    * get Kusu db"
    kusu-genconfig debug > $DIR/dbdump/kusu.sql
    /opt/kusu/libexec/kusu-db-copy -d $DIR/dbdump/kusu-sqlite.db
fi

if [ -f /root/kusu-orig.db ]; then
    check_cp_file /root/kusu-orig.db $DIR/root
fi

echo "    * get ps list"
ps auwwwwx > $DIR/ps

if [ "$ROLE" = "MASTER" ]; then
    echo "    * get Kusu information"
    kusu-kitops -l > $DIR/kusu/kits
    kusu-repoman -l > $DIR/kusu/repoman
    kusu-ngedit -l > $DIR/kusu/ngedit
    kusu-boothost -l > $DIR/kusu/boothost
    kusu-nghosts -l > $DIR/kusu/nghosts
fi

echo "    * timestamping"
echo "Kusu debug created on `date`" > $DIR/timestamp

echo "    * creating tarball (may take some time): $LOGANDCONFTARBALL"
cd $BASE_DIR/kusu-debug-$$ && tar -czf $LOGANDCONFTARBALL kusu-debug

echo "    * creating tarball (may take some time): $TFTPTARBALL"
cd $BASE_DIR/kusu-debug-$$ && tar -czf $TFTPTARBALL kusu-debug-tftpboot

echo "    * removing temporary debug tree"
cd /
rm -rf $BASE_DIR/kusu-debug-$$

echo
echo "Debug dump created:"
echo " Log files and configurations are stored in $LOGANDCONFTARBALL"
echo " TFTPBOOT files are stored in $TFTPTARBALL"
