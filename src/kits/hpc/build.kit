# $Id$
# build.kit for HPC kit

# package netcdf
netcdfpkg = SourcePackage()
netcdfpkg.name = 'netcdf'
netcdfpkg.version = '3.6.2'
netcdfpkg.release = '0'
netcdfpkg.installroot = '/opt/netcdf'
netcdfpkg.filename = 'netcdf-3.6.2.tar.gz'

# package bonnie++
bonniepkg = SRPMPackage()
bonniepkg.name = 'bonnie++'
bonniepkg.version = '1.03a'
bonniepkg.release = '1'
bonniepkg.filename = 'bonnie++-1.03a-1.src.rpm'

# package iozone
iozonepkg = SRPMPackage()
iozonepkg.name = 'iozone'
iozonepkg.version = '3_283'
iozonepkg.release = '1'
iozonepkg.filename = 'iozone-3_283-1.src.rpm'

# package iperf
iperfpkg = SRPMPackage()
iperfpkg.name = 'iperf'
iperfpkg.version = '2.0.2'
iperfpkg.release = '1'
iperfpkg.filename = 'iperf-2.0.2-1.src.rpm'

# package stream
streampkg = SRPMPackage()
streampkg.name = 'stream'
streampkg.version = '5.8'
streampkg.release = '1'
streampkg.filename = 'stream-5.8-1.src.rpm'

# package hdf5
hdf5pkg = SRPMPackage()
hdf5pkg.name = 'hdf5'
hdf5pkg.version = '1.6.6'
hdf5pkg.release = '1'
hdf5pkg.filename = 'hdf5-1.6.6-1.src.rpm'

# package mpich1-ethernet-gnu
mpich1pkg = SRPMPackage()
mpich1pkg.name = 'mpich1-ethernet-gnu'
mpich1pkg.version = '1.2.7p1'
mpich1pkg.release = '1'
mpich1pkg.filename = 'mpich1-ethernet-gnu-1.2.7p1-1.src.rpm'

# package modules
modulespkg = SRPMPackage()
modulespkg.name = 'modules'
modulespkg.version = '3.2.5'
modulespkg.release = '1'
modulespkg.filename = 'modules-3.2.5-1.src.rpm'

# package atlas
# this uses an existing binary rpm
# untuned and generic
atlaspkg = RPMPackage()
atlaspkg.name = 'atlas'
atlaspkg.version = '3.7.37'
atlaspkg.release = '1'
# each arch uses a different binary rpm
if getArch() == 'x86':
    atlaspkg.filename = 'atlas-3.7.37-1.i386.rpm'
if getArch() == 'x86_64':
    atlaspkg.filename = 'atlas-3.7.37-1.x86_64.rpm'

# package fftw
fftwpkg = SRPMPackage()
fftwpkg.name = 'fftw'
fftwpkg.version = '3.1.2'
fftwpkg.release = '1'
fftwpkg.filename = 'fftw-3.1.2-1.src.rpm'

# package hdf5-mpich1-gnu
# this uses an existing binary rpm
hdf5mpich1Pkg = RPMPackage()
hdf5mpich1Pkg.name = 'hdf5-mpich1-gnu'
hdf5mpich1Pkg.version = '1.6.6'
hdf5mpich1Pkg.release = '1'
# each arch uses a different binary rpm
if getArch() == 'x86':
    hdf5mpich1Pkg.filename = 'hdf5-mpich1-gnu-1.6.6-1.i386.rpm'
if getArch() == 'x86_64':
    hdf5mpich1Pkg.filename = 'hdf5-mpich1-gnu-1.6.6-1.x86_64.rpm'

linpackmpich1Pkg = RPMPackage()
linpackmpich1Pkg.name = 'linpack-mpich1-gnu'
linpackmpich1Pkg.version = '1.0a'
linpackmpich1Pkg.release = '1'

# each arch uses a different binary rpm
if getArch() == 'x86':
    linpackmpich1Pkg.filename = 'linpack-mpich1-gnu-1.0a-1.i386.rpm'
if getArch() == 'x86_64':
    linpackmpich1Pkg.filename = 'linpack-mpich1-gnu-1.0a-1.x86_64.rpm'

# package modules-mpich1-gnu
modulesmpich1gnupkg = SRPMPackage()
modulesmpich1gnupkg.name = 'modules-mpich1-gnu'
modulesmpich1gnupkg.version = '0.1'
modulesmpich1gnupkg.release = '1'
modulesmpich1gnupkg.filename = 'modules-mpich1-gnu-0.1-1.src.rpm'

# define component-mpich1
mpich1Comp = DefaultComponent()
mpich1Comp.name = 'MPICH1-libraries'
mpich1Comp.description = 'This component contains a collection of MPICH1 libraries.'

# adding package dependencies for component-MPICH1-libraries
mpich1Comp.addDep(hdf5mpich1Pkg)
mpich1Comp.addDep(linpackmpich1Pkg)
mpich1Comp.addDep(modulesmpich1gnupkg)

# define component-HPC-libraries
hpcLibrariesComp = DefaultComponent()
hpcLibrariesComp.name = 'HPC-libraries'
hpcLibrariesComp.description = 'This component contains a collection of HPC libraries.'

# adding package dependencies for component-HPC-libraries
hpcLibrariesComp.addDep(netcdfpkg)
hpcLibrariesComp.addDep(hdf5pkg)
hpcLibrariesComp.addDep(modulespkg)
hpcLibrariesComp.addDep(fftwpkg)
hpcLibrariesComp.addDep(atlaspkg)
hpcLibrariesComp.addDep(mpich1pkg)



# define component-Benchmarking-tools
benchmarkingToolsComp = DefaultComponent()
benchmarkingToolsComp.name = 'Benchmarking-tools'
benchmarkingToolsComp.description = 'This component contains a collection of benchmarking tools.'

# adding package dependencies for component-Benchmarking-tools
benchmarkingToolsComp.addDep(bonniepkg)
benchmarkingToolsComp.addDep(iozonepkg)
benchmarkingToolsComp.addDep(iperfpkg)
benchmarkingToolsComp.addDep(streampkg)
benchmarkingToolsComp.addDep(modulespkg)

# define HPC kit
k = DefaultKit()
k.name = 'hpc'
k.description = 'HPC kit.'

# Adding the components defined earlier
k.addComponent(hpcLibrariesComp)
k.addComponent(benchmarkingToolsComp)
k.addComponent(mpich1Comp)


# Add post install script. You can modify this shell script or add new ones in the
# sources directory
k.addScript('00-post-script.sh',mode='post')

# Add post uninstall script. You can modify this shell script or add new ones in the
# sources directory
k.addScript('00-postun-script.sh',mode='postun')
