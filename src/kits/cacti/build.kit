# build.kit template

# cacti rpm
cactiPkg = RPMPackage()
cactiPkg.name = 'cacti'
cactiPkg.version = '0.8.6j'
cactiPkg.release = '1'
cactiPkg.filename = 'cacti-0.8.6j-1.noarch.rpm'

# package cactid
cactidPkg = SRPMPackage()
cactidPkg.name = 'cacti-cactid'
cactidPkg.version = '0.8.6i'
cactidPkg.release = '1'
cactidPkg.filename = 'cacti-cactid-0.8.6i-1.src.rpm'

# cacti node rpm
cactiNodePkg = RPMPackage()
cactiNodePkg.name = 'cacti-node'
cactiNodePkg.version = '1'
cactiNodePkg.release = '1'
cactiNodePkg.filename = 'cacti-node-1-1.noarch.rpm'

# cacti component
cactiComp = DefaultComponent()
cactiComp.name = 'cacti'
cactiComp.ngtypes = ['installer']
cactiComp.description = 'component associcated with cacti'
cactiComp.addDep(cactiPkg)
cactiComp.addDep(cactidPkg)
cactiComp.addScript('component-cacti.remove.sh', mode='postun')

# cacti node component
cactiNodeComp = DefaultComponent()
cactiNodeComp.name = 'cacti-monitored-node'
cactiNodeComp.ngtypes = ['installer', 'compute']
cactiNodeComp.description = 'component associated with cacti nodes'
cactiNodeComp.addDep(cactiNodePkg)
cactiNodeComp.addScript('component-cacti-monitored-node.remove.sh', mode='postun')

# define a default kit
k = DefaultKit()
k.name = 'cacti'
k.description = 'cacti kit.'
k.arch = getArch()

# Adding the component defined earlier
k.addComponent(cactiComp)
k.addComponent(cactiNodeComp)

